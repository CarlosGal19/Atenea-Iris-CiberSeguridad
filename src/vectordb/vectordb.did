type Error = variant {
  MemoryError;
  UniqueViolation;
  DimensionMismatch;
  NotFound;
};
type Result = variant { Ok; Err : Error };
type Result_2 = variant { Ok : vec text; Err : Error };
service : {
  build_index : (text) -> (Result);
  create_collection : (text, nat64) -> (Result);
  create_index : (text, nat64, vec text, vec vec float32, text) -> (Result);
  delete_collection : (text) -> (Result);
  get_collections : () -> (Result_2) query;
  get_docs : (text) -> (Result_2) query;
  insert : (text, vec vec float32, vec text, text) -> (Result);
  "query" : (text, vec float32, int32) -> (Result_2) query;
}